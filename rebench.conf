# -*- mode: yaml -*-
# Config file for ReBench
default_experiment: som-rs
default_data_file: 'rebench.data'

reporting:
    # Benchmark results will be reported to ReBenchDB
    rebenchdb:
        # this url needs to point to the API endpoint
        db_url: https://rebench.stefan-marr.de/rebenchdb
        repo_url: https://github.com/OctaveLarose/som-rs
        record_all: true # make sure everything is recorded
        project_name: som-rs

runs:
    max_invocation_time: 60

benchmark_suites:
    macro:
        gauge_adapter: RebenchLog
        command: &MACRO_CMD "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/Richards core-lib/Examples/Benchmarks/DeltaBlue core-lib/Examples/Benchmarks/NBody core-lib/Examples/Benchmarks/Json core-lib/Examples/Benchmarks/GraphSearch -- BenchmarkHarness %(benchmark)s %(iterations)s "
        iterations: 10
        benchmarks:
            - Richards:     {extra_args: 1, machines: [yuria2]}
            - DeltaBlue:    {extra_args: 50, machines: [yuria2]}
            - NBody:        {extra_args: 500, machines: [yuria2]}
            - JsonSmall:    {extra_args: 1, machines: [yuria2]}
            - GraphSearch:  {extra_args: 4, machines: [yuria2]}
            - PageRank:     {extra_args: 40, machines: [yuria2]}

    micro:
        gauge_adapter: RebenchLog
        command: "-c core-lib/Smalltalk core-lib/Examples/Benchmarks core-lib/Examples/Benchmarks/LanguageFeatures -- BenchmarkHarness %(benchmark)s %(iterations)s "
        iterations: 10
        benchmarks:
            - Fannkuch:     {extra_args: 6, machines: [yuria2]}
            - Fibonacci:    {extra_args: "3", machines: [yuria2]}
            - Dispatch:     {extra_args: 2, machines: [yuria2]}
            - Bounce:       {extra_args: "2", machines: [yuria2]}
            - Loop:         {extra_args: 5, machines: [yuria2]}
            - Permute:      {extra_args: "3", machines: [yuria2]}
            - Queens:       {extra_args: "2", machines: [yuria2]}
            - List:         {extra_args: "2", machines: [yuria2]}
            - Recurse:      {extra_args: "3", machines: [yuria2]}
            - Storage:      {extra_args: 1, machines: [yuria2]}
            - Sieve:        {extra_args: 4, machines: [yuria2]}
            - BubbleSort:   {extra_args: "3", machines: [yuria2]}
            - QuickSort:    {extra_args: 1, machines: [yuria2]}
            - Sum:          {extra_args: 2, machines: [yuria2]}
            - Towers:       {extra_args: "2", machines: [yuria2]}
            - TreeSort:     {extra_args: "1", machines: [yuria2]}
            - IntegerLoop:  {extra_args: 2, machines: [yuria2]}
            - FieldLoop:    {extra_args: 1, machines: [yuria2]}
            - WhileLoop:    {extra_args: 10, machines: [yuria2]}
            - Mandelbrot:   {extra_args: 30, machines: [yuria2]}

executors:
    som-rs-ast:
        path: .
        executable: ./target/release/som-interpreter-ast
    som-rs-bc:
        path: .
        executable: ./target/release/som-interpreter-bc

# define the benchmarks to be executed for a re-executable benchmark run
experiments:
    som-rs:
        description: All benchmarks on som-rs
        suites:
            - micro
            - macro
        executions:
            - som-rs-ast
            - som-rs-bc
